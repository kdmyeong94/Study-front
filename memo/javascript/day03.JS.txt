
 1. Date 내장 객체
	- Date 객체는 웹 브라우저가 설치된 pc의 현재 시각을 얻어온다.

 2. setInterval()
	- 다른 함수의 이름과 1/1000초 단위의 시간값을 파라미터로 설정하여 정해진 시간에 한번씩 파라미터로 전달된 함수를 반복적으로 호출한다.

	// 함수를 1초에 한번씩 반복해서 자동 호출한다.
	setInterval( 함수, 1000 );

	// 익명함수 : 함수의 이름이 없다.
	// 파라미터 형태로 전달되는 함수를 콜백함수라고 한다.
	setInterval( function(){
		.. 1초마다 반복 실행될 구문..
	}, 1000 );

 3. 객체
  3-1. 객체
	- 빈 객체의 생성	: 아무런 기능이 없는 상태의 빈 객체를 생성. 이 상태를 prototype이라 한다.

	- 변수	 	: 빈 객체 안에 변수를 추가
	- 함수		: 빈 객체 안에 함수들을 추가

  3-2. 객체에 함수추가
	- 객체에 정의된 function -> 메서드라고 한다.	

	객체이름.함수이름 = function(파라미터){
	
	};

  3-3. 메서드 안에서 객체 자원 활용하기
	- 객체 안에 포함된 메서드에서 다른 메서드를 호출하거나, 활용하고자 하는 경우에는 this키워드를 사용한다.

	this.변수이름
	this.함수이름();

 4. HTML에서 자바스크립트 로드하기
	- inline : 태그에 직접 자바스크립트를 기술하는 방식이다.
		장점은 태그에 연관된 스크립트가 분명하게 드러난다는 점이다. 하지만 정보(HTML)와 제어(Javascript)가 섞여있기 때문에 정보로서의 가치가 떨어진다.

 	- script : <script> 태그를 만들어서 자바스크립트 코드를 삽입하는 방식 html 태그와 js코드를 분리 할 수 있다는 점이다.

	- js.