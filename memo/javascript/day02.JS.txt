
 1. 유효범위 (scope)

 2. var 변수 선언의 문제점
	- 동일한 변수명으로 선언하였음에도 불구하고, 에러가 나오지 않고 각각의 결과를 출력해낸다.
	- 유연한 변수 선언으로 간단한 테스트에는 편리 할 수 있으나, 코드량이 많아지면 어디에서 어떻게 사용 될 지 파악하기 어렵고, 버그 발생률이 높다.

  2-1. 추가된 변수 선언 방식
	- let	: 변수에 재할당이 가능
	- const	: 변수 재선언, 재할당 모두 불가능

 3. 배열
  3-1. 배열을 만드는 법
	
	let myarray = new Array(값1, 값2,... , 값n);
	let myarray = [값1, 값2, ... , 값n]

  3-2. 인덱스
	- 생성된 배열은 사물함과 같이 각각의 칸에 값들이 저장되고, 각각의 칸은 0부터 일련번호가 지정된다.

  3-3. 배열 데이터 접근
	- 배열이름[인덱스]

  3-4. 2차배열
	- 배열이름[행][열]
	
	 let myarray = new Array(
		new Array(값1, 값2, ... , 값n),
		new Array(값1, 값2, ..., 값n)
	);

	 let myarray = [
		[ 값1, 값2, ..., 값n],
		[ 값1, 값2, ..., 값n]
	];

  3-5. 길이
 	- 행	: 배열이름.length;
	- 열	: 배열이름[n].length;

 4. Math객체
